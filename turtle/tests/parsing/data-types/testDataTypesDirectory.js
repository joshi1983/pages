import { prefixWrapper } from '../../helpers/prefixWrapper.js';
import { testAddSubtypes } from './testAddSubtypes.js';
import { testAlphaColorListType } from './testAlphaColorListType.js';
import { testAlphaColorType } from './testAlphaColorType.js';
import { testBoolType } from './testBoolType.js';
import { testColorListType } from './testColorListType.js';
import { testColorType } from './testColorType.js';
import { testCProcType } from './testCProcType.js';
import { testDataListType } from './testDataListType.js';
import { testDataTypeParsing } from './data-type-parsing/testDataTypeParsing.js';
import { testDataTypes } from './testDataTypes.js';
import { testDataTypesContains } from './testDataTypesContains.js';
import { testDataTypesInJSON } from './testDataTypesInJSON.js';
import { testDataTypesIntersectWith } from './testDataTypesIntersectWith.js';
import { testDataTypesIntersectWithValueCompatability } from './testDataTypesIntersectWithValueCompatability.js';
import { testDataTypesOptimize } from './testDataTypesOptimize.js';
import { testDataTypesSortBySetSize } from './testDataTypesSortBySetSize.js';
import { testDataTypesUnion } from './testDataTypesUnion.js';
import { testEasingType } from './testEasingType.js';
import { testGradientType } from './testGradientType.js';
import { testIntegerType } from './testIntegerType.js';
import { testIsDataTypeContaining } from './testIsDataTypeContaining.js';
import { testMergeCompositeDataTypes } from './testMergeCompositeDataTypes.js';
import { testNullType } from './testNullType.js';
import { testNumberType } from './testNumberType.js';
import { testOptimizeListsInDataTypeSet } from './testOptimizeListsInDataTypeSet.js';
import { testRemoveContainedTypes } from './testRemoveContainedTypes.js';
import { testRemoveNull } from './testRemoveNull.js';
import { testTransparentType } from './testTransparentType.js';

export function testDataTypesDirectory(logger) {
	testAddSubtypes(prefixWrapper('testAddSubtypes', logger));
	testAlphaColorListType(prefixWrapper('testAlphaColorListType', logger));
	testAlphaColorType(prefixWrapper('testAlphaColorType', logger));
	testBoolType(prefixWrapper('testBoolType', logger));
	testColorListType(prefixWrapper('testColorListType', logger));
	testColorType(prefixWrapper('testColorType', logger));
	testCProcType(prefixWrapper('testCProcType', logger));
	testDataListType(prefixWrapper('testDataListType', logger));
	testDataTypeParsing(prefixWrapper('testDataTypeParsing', logger));
	testDataTypes(prefixWrapper('testDataTypes', logger));
	testDataTypesContains(prefixWrapper('testDataTypesContains', logger));
	testDataTypesInJSON(prefixWrapper('testDataTypesInJSON', logger));
	testDataTypesIntersectWith(prefixWrapper('testDataTypesIntersectWith', logger));
	testDataTypesIntersectWithValueCompatability(prefixWrapper('testDataTypesIntersectWithValueCompatability', logger));
	testDataTypesOptimize(prefixWrapper('testDataTypesOptimize', logger));
	testDataTypesSortBySetSize(prefixWrapper('testDataTypesSortBySetSize', logger));
	testDataTypesUnion(prefixWrapper('testDataTypesUnion', logger));
	testEasingType(prefixWrapper('testEasingType', logger));
	testGradientType(prefixWrapper('testGradientType', logger));
	testIntegerType(prefixWrapper('testIntegerType', logger));
	testIsDataTypeContaining(prefixWrapper('testIsDataTypeContaining', logger));
	testMergeCompositeDataTypes(prefixWrapper('testMergeCompositeDataTypes', logger));
	testNullType(prefixWrapper('testNullType', logger));
	testNumberType(prefixWrapper('testNumberType', logger));
	testOptimizeListsInDataTypeSet(prefixWrapper('testOptimizeListsInDataTypeSet', logger));
	testRemoveContainedTypes(prefixWrapper('testRemoveContainedTypes', logger));
	testRemoveNull(prefixWrapper('testRemoveNull', logger));
	testTransparentType(prefixWrapper('testTransparentType', logger));
};
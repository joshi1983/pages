import { processTranslationTestCases } from './processTranslationTestCases.js';

export function testFunctionCallTranslation(logger) {
	const cases = [
		{'in': 'func1(50)', 'out': 'func1 50'},
		{'in': 'fd(50)', 'out': 'forward 50'},
		{'in': 'skk.fd(50)', 'out': 'forward 50'},
		{'in': 'star.right(75)', 'out': 'right 75'},
		{'in': 'turtle.heading()', 'out': 'pyHeading'},
		{'in': 'turtle.circle(100)', 'out': 'circleLeft 100'},
		{'in': 'turtle.up()\nx = 0', 'out': 'penUp \nmake "x 0'},
		{'in': 'turtle.setpos(x, y)', 'out': 'setPos [:x :y]'},
		{'in': 'turtle.Screen().bgcolor("black")', 'out': 'setScreenColor "black'},
		{'in': 'func1(1,2)', 'out': 'func1 1 2'},
		{'in': 'fillcolor()', 'out': 'fillColor'},
		{'in': 'fillcolor(255, 0, 0)', 'out': 'setFillColor convertColorUsingMode [255 0 0]'},
		{'in': 'color()', 'out': 'penColor'},
		{'in': 'color(255, 0, 100)', 'out': 'setColors convertColorUsingMode [255 0 100]'},
		{'in': 'distance(0, 1)', 'out': 'distance [0 1]'},
		{'in': 'color(\'red\', \'yellow\')', 'out': 'setPenColor "red\nsetFillColor "yellow'},
		{'in': 'turtle.color(random.random(), random.random(), random.random())', 'out': 'setColors convertColorUsingMode [randomRatio  randomRatio  randomRatio ]'},
		{'in': 'abs(pos())', 'out': 'hypot pos'},
		{'in': 'abs([1,2])', 'out': 'hypot [1 2]'},
		{'in': 'abs( (1,2) )', 'out': 'hypot [1 2]'},
		{'in': 'abs(x)', 'out': 'abs :x'},
		{'in': 'color("red")', 'out': 'setColors "red'},
		{'in': 'color("aliceblue")', 'out': 'setColors "aliceblue'},
		{'in': 'color("skyblue1")', 'out': 'setColors "#87CEFF'},
		{'in': "t.color('#4285F4','#4285F4')", 'out': 'setPenColor "#4285F4\nsetFillColor "#4285F4'},
		{'in': "t.color('red','blue')", 'out': 'setPenColor "red\nsetFillColor "blue'},
		{'in': "t.color('#4285F4','#4285F4')\nt.pensize(5)", 'out': 'setPenColor "#4285F4\nsetFillColor "#4285F4\nsetPenSize 5'},
		{'in': 'random.choice([1,2,3])', 'out': 'pick [1 2 3]'},
		{'in': 'random.random()', 'out': 'randomRatio'},
		{'in': 'home()', 'out': 'pyHome'},
		{'in': 'dot()', 'out': 'pyDot -1 penColor'},
		{'in': 'dot(10)', 'out': 'pyDot 10 penColor'},
		{'in': 'dot("red")', 'out': 'pyDot -1 "red'},
		{'in': 'dot(10, "red")', 'out': 'pyDot 10 "red'},
		{'in': 'tur.dot(10, "red")', 'out': 'pyDot 10 "red'},
		{'in': 'turtle.dot(60, color="yellow")',  'out': 'pyDot 60 "yellow'},
		{'in': 'degrees(1)', 'out': 'pyDegrees 1'},
		{'in': 'degrees(360)', 'out': 'pyDegrees 360'},
		{'in': 'radians()', 'out': 'pyDegrees 2 * pi'},
		{'in': 'seth(1)', 'out': 'setHeading 90 - 1'},
		{'in': 'seth(x)', 'out': 'setHeading 90 - :x'},
		{'in': 'seth(1 + 3)', 'out': 'setHeading 90 - (1 + 3)'},
		{'in': 'setheading(1)', 'out': 'setHeading 90 - 1'},
		{'in': 'turtle.seth(1)', 'out': 'setHeading 90 - 1'},
		{'in': 'turtle.setheading(1)', 'out': 'setHeading 90 - 1'},
		{'in': 'print(str(1))', 'out': 'print str 1'},
		{'in': 't.pen(shown=True, pendown=True, pencolor="purple", fillcolor="orange", pensize=10, speed=9)', 'out': 'showTurtle\npenDown\nsetPenColor "purple\nsetFillColor "orange\nsetPenSize 10'},
		{'in': 'import math\nprint math.cos(1)', 'out': 'print radCos 1'},
		{'in': 'import math\nprint math.sin(1)', 'out': 'print radSin 1'},
		{'in': 'import math\nprint math.tan(1)', 'out': 'print radTan 1'},
	];
	processTranslationTestCases(cases, logger);
};
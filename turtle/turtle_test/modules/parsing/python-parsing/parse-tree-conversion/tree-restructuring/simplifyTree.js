import { ParseTreeTokenType } from '../../ParseTreeTokenType.js';

/*
Manipulates the tree to be simpler without affecting the code generated by translating to WebLogo.
The simpler form is easier to manually inspect and troubleshoot for simple test cases.
It can also be less work for later processing such as converting to WebLogo.
*/
export function simplifyTree(token) {
	if (token === undefined)
		return;
	let t = token;
	while (t.type === ParseTreeTokenType.UNRECOGNIZED && t.children.length === 1) {
		t = t.children[0];
	}
	if (t.type === ParseTreeTokenType.UNRECOGNIZED && t.children.length === 0)
		return;
	for (let i = 0; i < t.children.length; i++) {
		t.replaceChild(t.children[i], simplifyTree(t.children[i]));
	}
	if (t.type === ParseTreeTokenType.FUNCTION_CALL &&
	((t.children[0] === undefined) || (t.children[0].type === ParseTreeTokenType.IDENTIFIER)) &&
	t.children.length === 2) {
		// first child is not needed.
		// It corresponds with the function name and the function name is represented in t.val.
		t.removeChild(t.children[0]);
	}
	return t;
};
to drawCircles :circlesInfo :scale
	localmake "oldState turtleState
	repeat count :circlesInfo [
		localmake "circleInfo item repcount :circlesInfo
		localmake "radius :scale * first :circleInfo
		circle :radius
		right item 2 :circleInfo
		jumpForward :scale * last :circleInfo
	]

	setTurtleState :oldState
end

to createSingularGradient :radius
	localmake "colorStops createPList2 [
		[0 "#0000] [1 "#8000]
	]
	output createRadialGradient pos :radius :colorStops
end

; Inspired by logo at
; https://en.wikipedia.org/wiki/Singularity_Group#/media/File:Singularity_Group_BW_logo.svg
to singularityGroupLogo :height
	localmake "oldState turtleState
	localmake "oldHeading heading
	localmake "blackCirclesInfo [
		[0.0135 7 0.061] [0.025 15.5 0.079] [0.034 15.5 0.1045]
		[0.049 21 0.1368] [0.0635 10 0.1]
	]
	localmake "smallCirclesInfo [
		[0.033 16.5 0.0782] [0.0245 14.5 0.06] [0.0132 9.7 0.0465]
		[0.0075 10 0.1]
	]
	localmake "midCirclesInfo [
		[0.013 7 0.06] [0.025 14.5 0.08] [0.034 16.5 0.105]
		[0.05 22 0.138] [0.063 10 0.1]
	]
	jumpForward :height / 2
	localmake "center pos
	setPenSize 0
	setFillColor "black
	repeat 2 [
		setHeading :oldHeading - 30 + repcount * 360 / 2
		jumpForward :height * 0.091
		drawCircles :blackCirclesInfo :height
		jumpTo :center
	]
	setFillGradient createSingularGradient :height / 2
	repeat 6 [
		setHeading :oldHeading + 5.9 + repcount * 360 / 6
		jumpForward :height * 0.19
		drawCircles :smallCirclesInfo :height
		jumpTo :center
	]
	setHeading :oldHeading + 30
	repeat 4 [
		jumpForward :height * 0.09
		drawCircles :midCirclesInfo :height
		jumpTo :center
		right 360 / 6
		if repcount = 2 [
			right 360 / 6
		]
	]

	setTurtleState :oldState
end

singularityGroupLogo 100
; triABAlphaToC calculates the unknown length from
; 2 lengths and an angle(alpha) between side :b and the returned side
; The math was derived from The Law of Cosines
to triAbAlphaToC :a :b :alpha
	assert :b <> 0
	localmake "quadraticA -1 / (2 * :b)
	localmake "quadraticB cos :alpha
	localmake "quadraticC (:a * :a - :b * :b) / (2 * :b)
	localmake "solutions solveQuadratic :quadraticA :quadraticB :quadraticC
	assert not empty? :solutions
	output first :solutions
end

; calculates how far forward to intersect the circle
; with radius :radius and centered on point :point
to getJumpToDistance :radius :point
	localmake "headingToPoint towards :point
	localmake "distanceToPoint distance :point
	localmake "headingDelta abs heading - :headingToPoint
	output triAbAlphaToC :radius :distanceToPoint :headingDelta
end

; Arcs left far enough to intersect the specified point
; Assumes the point is on the arc
to arcLeftToPoint :point :arcRadius
	localmake "arcAngle 2 * arcSin (distance :point) / 2 / :arcRadius
	arcLeft :arcAngle :arcRadius
end

to cfaBars :radius
	localmake "oldPos pos
	localmake "oldHeading heading
	localmake "size1 :radius * 0.06
	localmake "size2 :radius * 0.16
	localmake "size3 :radius * 0.12
	localmake "angle1 360 / 7
	; The CFA logo has this angle a few degrees smaller but
	; 360 / 7 feels more mathematically and geometrically exact
	; Maybe the logo designer wanted a little more blank space between lines
	; but it seems like the few degrees less was eyeballed instead of based 
	; on a mathematically calculated number

	jumpForward :size1
	repeat 3 [
		localmake "pos1 pos
		left :angle1
		jumpForward getJumpToDistance :radius :oldPos
		localmake "arcEndPoint pos
		jumpTo :pos1
		right :angle1
		polyStart
		jumpForward :size2
		localmake "pos2 pos
		left :angle1
		jumpForward getJumpToDistance :radius :oldPos
		setHeading (towards :oldPos) + 90
		arcLeftToPoint :arcEndPoint :radius
		polyEnd
		jumpTo :pos2
		setHeading :oldHeading
		jumpForward :size3
	]
end

to cfaLogoWithCustomColors :height :colors
	localmake "oldState turtleState
	localmake "radius :height / 2
	setPenSize 0
	localmake "center pos
	right 5
	repeat count :colors [
		setFillColor item repcount :colors
		cfaBars :radius
		jumpTo :center
		right 360 / count :colors
	]	
	setTurtleState :oldState
end

; Inspired by
; https://en.wikipedia.org/wiki/CFA_Institute#/media/File:CFA_Institute_Logo.png
; Referenced from
; https://en.wikipedia.org/wiki/CFA_Institute#
; The logo is used in
; https://www.cfainstitute.org
to cfaLogo :height
	localmake "colors ["#008ed5 "#5b77cc "#009966 "#008ed5 "#009966 "#5b77cc "#009966]
	jumpForward :height / 2
	setPenSize 0
	setFillColor "white
	circle :height / 2
	cfaLogoWithCustomColors :height :colors
	jumpBackward :height / 2
end

to cfaLogoMonochrome :height
	localmake "colors duplicate "white 7
	localmake "radius :height / 2
	localmake "gradientRadius :radius * 2.5
	localmake "colorStops createPList
	setProperty "colorStops 0 "black
	setProperty "colorStops 0.4 "black
	setProperty "colorStops 0.7 "#8000
	setProperty "colorStops 0.9 "#2000
	setProperty "colorStops 1 "#0000
	jumpForward :radius
	localmake "center pos
	setPenSize :gradientRadius * 2
	setPenGradient createRadialGradient pos :gradientRadius :colorStops
	setLineCap "butt
	jumpBackward :radius
	forward :height
	jumpTo :center
	cfaLogoWithCustomColors :height :colors
	jumpBackward :radius
end

setScreenColor "#ddd
make "height 100
make "separation :height * 5
jumpLeft :separation / 2
cfaLogo :height
jumpRight :separation
cfaLogoMonochrome :height
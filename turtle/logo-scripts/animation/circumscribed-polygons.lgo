; Inspired by
; https://en.wikipedia.org/wiki/Concyclic_points#/media/File:Kepler_constant_inverse.svg
to circumscribedPolygons :height :numPolygons
	localmake "oldState turtleState
	localmake "oldHeading heading
	localmake "radius :height / 2
	setFillColor "white
	jumpForward :radius
	right 180
	for ["numSides :numPolygons + 3 3 -1] [
		localmake "scale :height * mix 0.5 1 ((:numSides - 3) / :numPolygons)
		setHeading :oldHeading + 180 / :numSides
		setPenColor "black
		setPenSize :scale * 0.012
		regularPolygon :radius :numSides
		localmake "radius :radius * cos 180 / :numSides
		setPenSize :scale * 0.007
		setPenColor "green
		circle :radius
	]

	setTurtleState :oldState
end

make "ratio animation.clampedTimeRatio
make "ratio :ratio * :ratio
make "maxPolygons 30
make "numPolygonsFactor max 1 :ratio * :maxPolygons
make "numPolygons int :numPolygonsFactor
make "numPSides :numPolygons + 3
make "height 100 * (1 - 1 / :numPSides * (sin 180 / :numPSides) * (:numPolygonsFactor - :numPolygons))
jumpForward (100 - :height) / 2 
setScreenColor "black
circumscribedPolygons :height :numPolygons

to animation.snapshotstyle
	output createPList2 [
		["zoom.scale 5.5]
		["position.y 50]
	]
end

to animation.setup
	localmake "minutes 0
	localmake "seconds 2
	; Edit this if you want to change the length of your animation.
	output createPList2 [
		["duration :minutes * 60 + :seconds]
	]
end
make "colors ["red "yellow "white "blue "lime]

to drawTriangle :size :time :dotSize :numPoints
	localmake "oldState turtleState
	localmake "radius :size
	localmake "sideLength 2 * :radius * sin 360 / 2 / 3
	jumpForward :radius

	setPenSize 0
	right 150
	repeat 3 [
		localmake "start pos
		jumpForward :sideLength
		localmake "endPos pos
		repeat :numPoints [
			setFillColor mixItems :colors modulo repRatio * 0.1 + :time 1
			jumpTo mix :endPos :start power repRatio 1.3
			circle :dotSize
		]
		jumpTo :endPos
		right 360 / 3
	]
	setTurtleState :oldState
end

; Inspired by:
; https://hexeosis.tumblr.com/post/776826082191163392
to hexeosis :height :time
	localmake "oldState turtleState
	localmake "oldHeading heading
	localmake "numSizes 55
	setFillBlendMode "lighter
	repeat 2 [
		setHeading :oldHeading + repcount * 360 / 2 / 3
		localmake "size1 :height * (1 + :time * 2) * item repcount [2 1]
		localmake "offset repcount * 0.5 + :time
		localmake "zOffset 1.5 - (repcount - 0.7) * :time * 40
		localmake "dotSizeFactor repcount * 0.01
		localmake "numPoints 70 - repcount * 24
		repeat :numSizes [
			localmake "z repcount * 0.1 + :zOffset
			if :z > 0 [
				localmake "size :size1 / :z
				localmake "dotSize :size * :dotSizeFactor
				drawTriangle :size :time + repcount * 0.05 + :offset :dotSize :numPoints
			]
			right 12
		]
		localmake "numSizes :numSizes * 4.5
	]

	setTurtleState :oldState
end

setScreenColor "black
make "time interpolateRatio easeInOut animation.clampedTimeRatio
make "time :time * 0.51
make "fadeInTime 0.002
if :time < :fadeInTime [
	; fade in visibility of the spirals at the beginning.
	make "ratio :time / :fadeInTime
	repeat count :colors [
		make "c item repcount :colors
		setItem repcount "colors mix :c transparent :ratio
	]
]
hexeosis 100 :time

to animation.snapshotstyle
	output createPList2 [
		["zoom.scale 2.5]
	]
end

to animation.setup
	localmake "minutes 0
	localmake "seconds 40
	; Edit this if you want to change the length of your animation.
	output createPList2 [
		["duration :minutes * 60 + :seconds]
		["thumbnailTime :seconds / 2]
	]
end

; Inspired by
; https://www.pinterest.ca/pin/102949541472656268

to equilateralTriangle :size
	localmake "oldState turtleState
	localmake "sideLength :size * 2 * sin 60
	jumpBackward :size * sin 30
	isoTriangle :sideLength :sideLength * cos 30
	setTurtleState :oldState
end

to trigonometryCircles :size :progressRatio
	localmake "oldState turtleState
	localmake "numComplete int :progressRatio * 3
	localmake "oldPos pos
	localmake "oldHeading heading
	localmake "sideLength :size * 2 * sin 60
	localmake "maxLen :sideLength / cos 30
	localmake "partialProgress :progressRatio * 3 - :numComplete
	if :numComplete = 3 [
		localmake "partialProgress 0
	]
	localmake "partialLen :maxLen * :partialProgress
	localmake "circleRadius :partialLen * sin 30
	localmake "tinyCircleRadius :size * 0.04
	setPenColor "yellow
	setFillColor "brown
	setPenSize :size * 0.03
	equilateralTriangle :size
	setPenSize :size * 0.02
	setLineCap "round
	repeat :numComplete [
		setHeading :oldHeading + (repcount + 1) * 360 / 3
		jumpTo :oldPos
		jumpBackward :maxLen - :size
		forward :maxLen
	]
	setFillColor "white
	if :partialProgress > 0 [
		jumpTo :oldPos
		setHeading :oldHeading + (:numComplete - 1) * 360 / 3
		jumpForward :size
		backward :partialLen
		circle :tinyCircleRadius
		setFillColor transparent
		circle :circleRadius
	]
	if :progressRatio >= 1 [
		jumpTo :oldPos
		circle :tinyCircleRadius
	]

	setTurtleState :oldState
end

setScreenColor "black
trigonometryCircles 100 animation.time * 0.11

to animation.snapshotstyle
	output createPList2 [
		["zoom.scale 1.8]
	]
end

to animation.setup
	localmake "minutes 0
	localmake "seconds 10
	; Edit this if you want to change the length of your animation.
	output createPList2 [
		["duration :minutes * 60 + :seconds]
		["thumbnailTime 2]
	]
end
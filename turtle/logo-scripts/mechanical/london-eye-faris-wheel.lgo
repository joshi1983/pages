; Inspired by:
; https://www.robertharding.com/preview/1245-881/london-eye-millennium-wheel-twilight-london-england-united/
; The animation shows the wheel rotating.

to londonEyeMount :size
	localmake "oldPos pos
	localmake "oldHeading heading
	localmake "angle 10
	localmake "size1 :size / cos :angle
	localmake "platformWidth :size * 0.7
	localmake "platformHeight :size * 0.07

	setPenSize :size * 0.002
	setPenColor "black
	penDown
	back :size
	localmake "platformCentre pos
	penUp
	setPos :oldPos
	penDown
	setPenSize :size * 0.03
	setPenColor "white
	right :angle
	back :size1
	penUp
	setPos :oldPos
	left :angle * 2
	penDown
	back :size1
	penUp
	setPos :platformCentre
	setHeading :oldHeading
	right 90
	back :platformWidth * 0.5
	setPenSize :platformHeight * 1.1
	setPenColor "black
	penDown
	forward :platformWidth
	setPenColor "gray
	setPenSize :platformHeight
	back :platformWidth	

	penUp
	setPos :oldPos
	setHeading :oldHeading
end

to londonEyeWheel :size
	localmake "oldPos pos
	localmake "oldHeading heading
	localmake "wheelRadius :size
	localmake "innerRadius :wheelRadius * 0.83
	localmake "midRadius :wheelRadius * 0.92
	localmake "numPods 32
	localmake "podSize :wheelRadius * 0.025
	localmake "podSupportSize :podSize
	localmake "outerRadius :wheelRadius - :podSize
	localmake "podSupportRadius :outerRadius - :podSize - :size * 0.002
	localmake "numCables 64

	setPenSize :wheelRadius * 0.006
	setPenColor "white
	circle :innerRadius
	circle :midRadius
	setFillColor "white
	setPenSize 0
	circle :wheelRadius * 0.03
	setPenColor "black
	localmake "cableJoints []
	repeat :numCables [
		penUp
		setPos :oldPos
		setPenSize :wheelRadius * 0.0005
		penDown
		forward :innerRadius
		setPenSize 0
		circle :wheelRadius * 0.01
		queue "cableJoints pos
		right 360 / :numCables
	]
	setHeading :oldHeading + 180 / :numCables
	setPenColor "white
	localmake "outerJoints []
	repeat :numCables [
		penUp
		setPos :oldPos
		forward :midRadius
		setPenSize 0
		circle :wheelRadius * 0.008
		localmake "outerJoint pos
		localmake "point1 item repcount :cableJoints
		localmake "point2 item (1 + remainder repcount :numCables) :cableJoints
		setHeading towards :point1
		penDown
		setPenSize :wheelRadius * 0.005
		forward distance :point1
		penUp
		setPos :outerJoint
		penDown
		queue "outerJoints :outerJoint
		setHeading towards :point2
		forward distance :point2
		setHeading :oldHeading + (repcount + 0.5) * 360 / :numCables
	]
	setFillColor "#333
	setHeading :oldHeading
	setPenSize 0
	repeat :numPods [
		penUp
		setPos :oldPos
		forward :outerRadius
		penDown
		circle :podSize
		right 360 / :numPods
	]
	setPenSize :wheelRadius * 0.002
	repeat :numPods [
		penUp
		setPos :oldPos
		forward :podSupportRadius
		right 90
		forward :podSupportSize * 0.5
		localmake "outerJoint1 pos
		penDown
		back :podSupportSize
		localmake "jointIndex 1 + remainder (repcount * 2 + :numCables - 3) :numCables
		localmake "midJoint1 item :jointIndex :outerJoints
		localmake "midJoint2 item remainder (:jointIndex + 1) :numCables :outerJoints
		setHeading towards :midJoint1
		forward distance :midJoint1
		penUp
		setPos :outerJoint1
		penDown
		setHeading towards :midJoint2
		forward distance :midJoint2

		setHeading :oldHeading + repcount * 360 / :numPods
	]
	penUp
	setHeading :oldHeading
	setPos :oldPos
end

to londonEye :size :angle
	localmake "oldPos pos
	localmake "oldHeading heading

	londonEyeMount :size
	right :angle
	londonEyeWheel :size

	penUp
	setPos :oldPos
	setHeading :oldHeading
end

setScreenColor "#28d
make "displacementRatio min 1 animation.time * animation.time
ifelse animation.time > 1 [
	make "angle (1 + 2 * (animation.time - 1)) * 360 / 10
] [
	make "angle :displacementRatio * 360 / 10	
]
londonEye 200 :angle
hideTurtle

to animation.snapshotstyle
	localmake "result plistCreate
	setProperty "result "zoom.scale 1.22
	output :result
end

to animation.setup
	localmake "minutes 0
	localmake "seconds 10
	; Edit this if you want to change the length of your animation.
	output :minutes * 60 + :seconds
end
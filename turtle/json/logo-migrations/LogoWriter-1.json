{
	"name": "LogoWriter",
	"description": "A Logo programming tool that mixes Logo with a word processing tool.  One of its unique strengths is using Logo code to automate features of the code editor.  LogoWriter lets Logo code be used a bit like VBA scripts are used in Microsoft Office software.  LogoWriter can be used to make interactive 2D games like PacMan.  LogoWriter was made by LCSI and has a lot of similarity to the newer Microworlds EX from LCSI.",
	"externalLink": "https://archive.org/details/intro_to_programming_in_logo_using_logowriter_2nd_edition",
	"alternativeLinks": [
		"https://www.youtube.com/watch?v=-2lt-C8EFus",
		"https://www.youtube.com/watch?v=HNeeOy1tXHw"
	],
	"commands": [
		{
			"primaryName": "back",
			"names": ["bk"],
			"to": "backward"
		},
		{
			"primaryName": "bg",
			"description": "Returns the background color",
			"returnTypes": "int",
			"to": "screenColor"
		},
		{
			"primaryName": "cg",
			"description": "Clear Graphics",
			"to": "clearScreen"
		},
		{
			"primaryName": "char",
			"to": "char"
		},
		{
			"primaryName": "ct",
			"args": [],
			"description": "Clear text",
			"returnTypes": null
		},
		{
			"primaryName": "fill",
			"args": [],
			"description": "Flood fills from the turtle's current position",
			"removeInMigration": true
		},
		{
			"primaryName": "first",
			"to": "first"
		},
		{
			"primaryName": "forward",
			"names": ["fd"],
			"to": "forward"
		},
		{
			"primaryName": "home",
			"to": "home"
		},
		{
			"primaryName": "ht",
			"to": "hideTurtle"
		},
		{
			"primaryName": "if",
			"to": "if"
		},
		{
			"primaryName": "ifelse",
			"to": "ifelse"
		},
		{
			"primaryName": "insert",
			"args": [
				{"name": "textToInsert", "types": "string"}
			],
			"description": "Inserts text on the screen and moves to the next character's location",
			"to": "label"
		},
		{
			"primaryName": "left",
			"names": ["lt"],
			"to": "left"
		},
		{
			"primaryName": "name",
			"args": [
				{"name": "value"},
				{"name": "variableName", "types": "string"}
			],
			"description": "Assigns a value to a variable.  name is similar to make except with the parameters in reverse order."
		},
		{
			"primaryName": "not",
			"to": "not"
		},
		{
			"primaryName": "output",
			"to": "output"
		},
		{
			"primaryName": "pd",
			"to": "penDown"
		},
		{
			"primaryName": "print",
			"to": "print"
		},
		{
			"primaryName": "printscreen",
			"to": "label"
		},
		{
			"primaryName": "printtext",
			"to": "label"
		},
		{
			"primaryName": "pu",
			"to": "penUp"
		},
		{
			"primaryName": "random",
			"to": "random"
		},
		{
			"primaryName": "readchar",
			"args": [],
			"description": "Reads a character",
			"returnTypes": "string",
			"migrateToCode": "\"A"
		},
		{
			"primaryName": "readlist",
			"args": [],
			"description": "Reads a list",
			"returnTypes": "list",
			"migrateToCode": "[]"
		},
		{
			"primaryName": "remainder",
			"to": "remainder"
		},
		{
			"primaryName": "repeat",
			"to": "repeat"
		},
		{
			"primaryName": "restore",
			"args": [],
			"description": "Gets back the page that was previously saved",
			"returnTypes": null
		},
		{
			"primaryName": "right",
			"names": ["rt"],
			"to": "right"
		},
		{
			"primaryName": "rmdir",
			"args": [
				{"name": "directoryName", "types": "string"}
			],
			"description": "Removes the specified directory",
			"removeInMigration": true
		},
		{
			"primaryName": "sentence",
			"to": "sentence"
		},
		{
			"primaryName": "setbg",
			"args": [
				{"name": "newColor", "types": "int"}
			],
			"description": "Sets background color",
			"to": "setScreenColor"
		},
		{
			"primaryName": "setc",
			"args": [
				{"name": "newColor", "types": "int"}
			],
			"description": "Sets color",
			"to": "setColors"
		},
		{
			"primaryName": "setdisk",
			"description": ""
		},
		{
			"primaryName": "seth",
			"args": [
				{"name": "newHeading", "types": "num"}
			],
			"description": "Sets heading",
			"to": "setHeading"
		},
		{
			"primaryName": "setprefix",
			"description": ""
		},
		{
			"primaryName": "setsh",
			"args": [
				{"name": "newShape", "types": "int"}
			],
			"description": "Sets the shape of the current turtle.  This not only changes what the turtle looks like but can also affect what stamp stamps on the page.",
			"removeInMigration": true
		},
		{
			"primaryName": "setslot",
			"description": ""
		},
		{
			"primaryName": "settc",
			"args": [
				{"name": "newColor", "types": "int"}
			],
			"description": "Sets the text color",
			"to": "setColors"
		},
		{
			"primaryName": "settextpos",
			"description": ""
		},
		{
			"primaryName": "show",
			"to": "show"
		},
		{
			"primaryName": "sound",
			"description": ""
		},
		{
			"primaryName": "st",
			"to": "showTurtle"
		},
		{
			"primaryName": "stamp",
			"args": [],
			"description": "Copies the current turtle's sprite/shape to the page.  In other words, the turtle's current appearance gets copied to the drawing at the turtle's current position and heading.",
			"removeInMigration": true
		},
		{
			"primaryName": "stop",
			"to": "stop"
		},
		{
			"primaryName": "tc",
			"args": [],
			"description": "Returns the text color",
			"returnTypes": "int",
			"to": "penColor"
		},
		{
			"primaryName": "tell",
			"args": [
				{"name": "turtlenumbers", "types": "int|list<int>"}
			],
			"description": "Changes the turtle(s) that the following code will deal with.  LogoWriter supports multiple turtles.  Many commands are associated with the current turtle including pu, pd, forward, setc, setsh, stamp...  A single turtle can be specified as a number or many turtles can be specified in a list.  'TELL ALL' can be used to select all turtles.",
			"removeInMigration": true,
			"returnTypes": null
		},
		{
			"primaryName": "textlen",
			"to": "count"
		},
		{
			"primaryName": "textpos",
			"description": ""
		},
		{
			"primaryName": "tone",
			"args": [
				{"name": "hertz", "types": "num"},
				{"name": "duration", "types": "num"}
			],
			"description": "Plays a musical/auditory tone.  Duration is measured in 60th's of a second so a duration of 1 would be 1/60 seconds.",
			"removeInMigration": true
		},
		{
			"primaryName": "toollist",
			"description": ""
		},
		{
			"primaryName": "touching?",
			"description": "",
			"returnTypes": "bool"
		},
		{
			"primaryName": "type",
			"to": "type"
		},
		{
			"primaryName": "wait",
			"args": [
				{"name": "interval", "types": "num"}
			],
			"description": "Waits specified interval",
			"returnTypes": null,
			"removeInMigration": true
		}
	],
	"keywords": [],
	"operators": []
}
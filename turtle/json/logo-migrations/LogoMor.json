{
	"name": "LogoMor",
	"description": "A 3D Logo programming environment",
	"externalLink": "https://logomor.com",
	"alternativeLinks": [
		"https://logomor.com/assets/Documentation.pdf"
	],
	"commands": [
		{"primaryName": "abs",
		"to": "abs"},
		{"primaryName": "and",
		"to": "and"},
		{"primaryName": "arc",
		"to": "arc"},
		{"primaryName": "arccos",
		"to": "arcCos"},
		{"primaryName": "arcsin",
		"to": "arcSin"},
		{"primaryName": "arctan",
		"to": "arcTan"},
		{"primaryName": "beginface",
		"to": "polyStart"},
		{
			"primaryName": "box",
			"args": [
				{"name": "cubeSize", "types": "num"}
			],
			"description": "Draws a square box"
		},
		{
			"primaryName": "color",
			"args": [
				{"name": "r", "types": "num"},
				{"name": "g", "types": "num"},
				{"name": "b", "types": "num"}
			],
			"description": "Similar to WebLogo's setPenColor but different arguments"
		},
		{
			"primaryName": "coloralpha",
			"args": [
				{"name": "alpha", "types": "num"}
			],
			"description": "alpha is 0..255. Related to WebLogo's setPenColor except setting only the opacity. "
		},
		{
			"primaryName": "colorhsb",
			"args": [
				{"name": "h", "types": "num"},
				{"name": "s", "types": "num"},
				{"name": "b", "types": "num"}
			],
			"description": "h is 0..360, s is 0..100, b is 0-100. Related to WebLogo's setPenColor except the color components need to pass through something like hsvToRGB first. "
		},
		{
			"primaryName": "cone",
			"args": [
				{"name": "radius", "types": "num"},
				{"name": "height", "types": "num"}
			],
			"description": "Draws a cone"
		},
		{"primaryName": "cos",
		"to": "cos"},
		{
			"primaryName": "cylinder",
			"args": [
				{"name": "radius", "types": "num"},
				{"name": "height", "types": "num"}
			],
			"description": "Draws a cylinder"
		},
		{
			"primaryName": "decrement",
			"args": [
				{"name": "varName", "types": "string", "refTypes": "*"}
			],
			"description": "Same as make \"var :var - 1"
		},
		{
			"primaryName": "dist",
			"to": "distance"
		},
		{
			"primaryName": "down",
			"names": ["dn"],
			"to": "pitchDown"
		},
		{
			"primaryName": "ellipseoid",
			"args": [
				{"name": "radiusX", "types": "num"},
				{"name": "radiusY", "types": "num"},
				{"name": "radiusZ", "types": "num"}
			],
			"description": "Draws an ellipsoid.  In other words, draws a sphere that was scaled to the specified radii."
		},
		{"primaryName": "endface",
		"to": "polyEnd"},
		{"primaryName": "equals",
		"to": "equal?"},
		{"primaryName": "exp",
		"to": "exp"},
		{"primaryName": "fd",
		"to": "forward"},
		{"primaryName": "getx",
		"to": "xCor"},
		{"primaryName": "gety",
		"to": "yCor"},
		{"primaryName": "getz",
		"to": "zCor"},
		{
			"primaryName": "hideturtle",
			"names": ["ht"],
			"to": "hideTurtle"
		},
		{"primaryName": "home",
		"to": "home"},
		{"primaryName": "if",
		"to": "if"},
		{"primaryName": "ifelse",
		"to": "ifElse"},
		{
			"primaryName": "image",
			"args": [
				{"name": "imageName"},
				{"name": "height", "types": "num"}
			],
			"description": "Similar to WebLogo's image command except the arguments are different."
		},
		{
			"primaryName": "increment",
			"args": [
				{"name": "varName", "types": "string", "refTypes": "*"}
			],
			"description": "Same as make \"var :var + 1"
		},
		{"primaryName": "int",
		"to": "int"},
		{
			"primaryName": "keypressed",
			"args": [],
			"description": "Returns 0 if no key pressed or the keycode of the key",
			"removeInMigration": true
		},
		{"primaryName": "label",
		"to": "label"},
		{
			"primaryName": "left",
			"names": ["lt"],
			"to": "left"
		},
		{"primaryName": "ln",
		"to": "ln"},
		{"primaryName": "make",
		"to": "make"},
		{"primaryName": "max",
		"to": "max"},
		{"primaryName": "min",
		"to": "min"},
		{"primaryName": "mod",
		"to": "modulo"},
		{"primaryName": "not",
		"to": "not"},
		{"primaryName": "or",
		"to": "or"},
		{
			"primaryName": "pendown",
			"names": ["pd"],
			"to": "penDown"
		},
		{
			"primaryName": "penup",
			"names": ["pu"],
			"to": "penUp"
		},
		{"primaryName": "pi",
		"to": "pi"},
		{"primaryName": "pow",
		"to": "power"},
		{"primaryName": "print",
		"to": "print"},
		{"primaryName": "rand",
		"to": "random"},
		{"primaryName": "repcount",
		"to": "repcount"},
		{"primaryName": "repeat",
		"to": "repeat"},
		{"primaryName": "return",
		"to": "output"},
		{
			"primaryName": "right",
			"names": ["rt"],
			"to": "right"
		},
		{
			"primaryName": "setpensize",
			"names": ["sps"],
			"to": "setPenSize"
		},
		{
			"primaryName": "settextsize",
			"names": ["sts"],
			"to": "setFontSize"
		},
		{"primaryName": "setx",
		"to": "setX"},
		{"primaryName": "setxyz",
		"to": "setxyz"},
		{"primaryName": "sety",
		"to": "setY"},
		{"primaryName": "setz",
		"to": "setZ"},
		{
			"primaryName": "showturtle",
			"names": ["st"],
			"to": "showTurtle"
		},
		{"primaryName": "sin",
		"to": "sin"},
		{
			"primaryName": "sound_getvolume",
			"args": [
				{"name": "soundName", "types": "string"}
			],
			"description": "Returns the volume setting",
			"returnTypes": "num"
		},
		{
			"primaryName": "sound_isplaying",
			"args": [
				{"name": "soundName", "types": "string"}
			],
			"description": "1 if the sound is currently playing",
			"returnTypes": "int"
		},
		{
			"primaryName": "sound_pause",
			"args": [
				{"name": "soundName", "types": "string"}
			],
			"description": "Pause"
		},
		{
			"primaryName": "sound_play",
			"args": [
				{"name": "soundName", "types": "string"}
			],
			"description": "Play/Resume"
		},
		{
			"primaryName": "sound_setvolume",
			"args": [
				{"name": "soundName", "types": "string"},
				{"name": "newVolume", "types": "num"}
			],
			"description": "Sets volume"
		},
		{
			"primaryName": "sound_stop",
			"args": [
				{"name": "soundName", "types": "string"}
			],
			"description": "Stops playing the sound"
		},
		{"primaryName": "sphere",
		"to": "sphere"},
		{"primaryName": "sqrt",
		"to": "sqrt"},
		{"primaryName": "static",
		"to": "make"},
		{"primaryName": "tan",
		"to": "tan"},
		{"primaryName": "to",
		"to": "to"},
		{
			"primaryName": "torus",
			"args": [
				{"name": "radius", "types": "num"},
				{"name": "tubeRadius", "types": "num"}
			],
			"description": "Draws a torus"
		},
		{"primaryName": "until",
		"to": "until"},
		{
			"primaryName": "up",
			"to": "pitchUp"
		},
		{
			"primaryName": "wait",
			"args": [
				{"name": "durationIn60thsOfSecond", "types": "num"}
			],
			"description": "Waits the specified duration",
			"removeInMigration": true
		},
		{"primaryName": "while",
		"to": "while"}
	],
	"keywords": [],
	"operators": []
}
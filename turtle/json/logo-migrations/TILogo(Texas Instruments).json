{
	"name": "TILogo",
	"description": "A Logo programming tool made by a joint effort between Texas Instruments and MIT Logo Group starting in 1979.  TILogo was originally made for the TI 99/4 and TI 99/4A computers.",
	"externalLink": "https://archive.org/details/TI_LOGO_1984_McGraw_Hill",
	"commands": [
		{
			"primaryName": "back",
			"names": ["bk"],
			"to": "backward"
		},
		{
			"primaryName": "beep",
			"args": [],
			"description": "Plays a beep sound",
			"removeInMigration": true
		},
		{
			"primaryName": "both",
			"to": "and"
		},
		{
			"primaryName": "butfirst",
			"to": "butFirst"
		},
		{
			"primaryName": "butlast",
			"to": "butLast"
		},
		{
			"primaryName": "charnum",
			"names": ["cn"],
			"to": "ascii"
		},
		{
			"primaryName": "chromatic",
			"description": "Changes meaning of a pitch designation"
		},
		{
			"primaryName": "clearScreen",
			"to": "clearScreen"
		},
		{
			"primaryName": "color",
			"args": [],
			"to": "penColor"
		},
		{
			"primaryName": "colorbackground",
			"args": [],
			"to": "setScreenColor"
		},
		{
			"primaryName": "debug",
			"args": [],
			"description": "Changes an option whereby errors will enter a pause state rather than return to top command level",
			"returnTypes": null
		},
		{
			"primaryName": "define",
			"args": [
				{"name": "procedureName", "types": "string"},
				{"name": "implementation", "types": "list<list>"}
			],
			"description": "Defines a procedure.  define is similar to what the 'to' keyword does.  In WebLogo, the equivalent would be an implementation with the to keyword."
		},
		{
			"primaryName": "difference",
			"to": "difference"
		},
		{
			"primaryName": "dot",
			"args": [
				{"name": "x", "types": "int"},
				{"name": "y", "types": "int"}
			],
			"description": "Draws a dot at the specified coordinates",
			"returnTypes": null
		},
		{
			"primaryName": "drum",
			"args": [
				{"name": "durations", "types": "list<num>"}
			],
			"description": "The beats are placed in a music buffer to be played by playmusic"
		},
		{
			"primaryName": "either",
			"to": "or"
		},
		{
			"primaryName": "first",
			"to": "first"
		},
		{
			"primaryName": "for",
			"to": "for"
		},
		{
			"primaryName": "forward",
			"to": "forward"
		},
		{
			"primaryName": "fput",
			"to": "fput"
		},
		{
			"primaryName": "freeze",
			"args": [],
			"description": "Stops motion of sprites on the screen.  Motion continues after calling 'thaw'",
			"removeInMigration": true
		},
		{
			"primaryName": "getprop",
			"to": "getProperty2"
		},
		{
			"primaryName": "greater",
			"to": "greater?"
		},
		{
			"primaryName": "heading",
			"to": "heading"
		},
		{
			"primaryName": "hideTurtle",
			"to": "hideTurtle"
		},
		{
			"primaryName": "home",
			"to": "home"
		},
		{
			"primaryName": "if",
			"to": "if"
		},
		{
			"primaryName": "iff",
			"description": "Runs the specified instructions if a previously tested condition was false.  There should be a test command used shortly before iff.  Usually, you can merge the test with iff into a single if command call where the condition is logically inverted.  WebLogo does not support test and iff but you can usually refactor to use if which will work in WebLogo."
		},
		{
			"primaryName": "ift",
			"description": "Runs the specified instructions if a previously tested condition was true.  There should be a call to the test command shortly before ift.  You can usually combine the test and ift to make a call to if."
		},
		{
			"primaryName": "is",
			"to": "equal?"
		},
		{
			"primaryName": "joy",
			"args": [
				{"name": "joystickNumber",
					"types": "int", "min": 1,
					"max": 2}
			],
			"description": "Returns the joystick position",
			"returnTypes": "int",
			"migrateToCode": "0"
		},
		{
			"primaryName": "last",
			"to": "last"
		},
		{
			"primaryName": "left",
			"to": "left"
		},
		{
			"primaryName": "legato",
			"description": "Controls 'dead time' inserted between notes."
		},
		{
			"primaryName": "length",
			"to": "count"
		},
		{
			"primaryName": "less",
			"to": "less?"
		},
		{
			"primaryName": "list",
			"to": "list"
		},
		{
			"primaryName": "loopmusic",
			"description": "Plays the music in the buffer repeatedly.  You can continue to execute Logo commands while music is playing.  To stop music, use setvoice 0."
		},
		{
			"primaryName": "lput",
			"to": "lput"
		},
		{
			"primaryName": "make",
			"to": "make"
		},
		{
			"primaryName": "makechar",
			"to": "char"
		},
		{
			"primaryName": "makeshape",
			"names": ["ms"],
			"args": [
				{"name": "shapeNumber", "types": "int"}
			],
			"description": "Selects the shape for the turtle.  In other words, changes the appearance of the turtle cursor.  The shapeNumber should be between 0 to 255.",
			"removeInMigration": true
		},
		{
			"primaryName": "music",
			"args": [
				{"name": "pitches", "types": "list<num>"},
				{"name": "durations", "types": "list<num>"}
			],
			"description": "If the lists don't have the same length, the longer one getse truncated.",
			"returnTypes": null
		},
		{
			"primaryName": "nobeep",
			"args": [],
			"description": "Stops the beep sound that was started by the beep command",
			"removeInMigration": true
		},
		{
			"primaryName": "not",
			"to": "not"
		},
		{
			"primaryName": "note",
			"args": [
				{"name": "duration", "types": "num"},
				{"name": "pitch", "types": "num"},
				{"name": "volume", "types": "num"}
			],
			"description": "Places the specified note in the music buffer",
			"returnTypes": null,
			"removeInMigration": true
		},
		{
			"primaryName": "noturtle",
			"args": [],
			"description": "Exits turtle mode",
			"returnTypes": null,
			"removeInMigration": true
		},
		{
			"primaryName": "number",
			"to": "number?"
		},
		{
			"primaryName": "numberof",
			"args": [
				{"name": "numberSource"}
			],
			"description": "Usually used in conjunction with WHO to return the number of the active sprite",
			"migrateToCode": "0",
			"returnTypes": "int"
		},
		{
			"primaryName": "output",
			"to": "output"
		},
		{
			"primaryName": "pa",
			"args": [],
			"description": "Prints all procedure names and implementations"
		},
		{
			"primaryName": "pendown",
			"names": ["pd"],
			"to": "penDown"
		},
		{
			"primaryName": "penup",
			"names": ["pu"],
			"to": "penUp"
		},
		{
			"primaryName": "pn",
			"args": [],
			"description": "Prints all defined names"
		},
		{
			"primaryName": "po",
			"args": [
				{
					"name": "procName"
				}
			],
			"description": "Prints out the specified procedure",
			"removeInMigration": true
		},
		{
			"primaryName": "pp",
			"args": [
			],
			"description": "Prints all tile lines of defined procedures",
			"removeInMigration": true
		},
		{
			"primaryName": "print",
			"to": "print"
		},
		{
			"primaryName": "printchar",
			"names": ["pc"],
			"args": [
				{"name": "tileNumber"}
			],
			"description": "Prints the corresponding tile character at the current cursor position"
		},
		{
			"primaryName": "printout",
			"args": [],
			"description": "Prints all procedures on a thermal printer or RS232 printer"
		},
		{
			"primaryName": "product",
			"to": "product"
		},
		{
			"primaryName": "putprop",
			"to": "putprop"
		},
		{
			"primaryName": "quotient",
			"to": "quotient"
		},
		{
			"primaryName": "random",
			"args": [],
			"description": "Outputs a random number between 0 and 9.  WebLogo's random command is similar if WebLogo's random was defaulted to an input of 9.",
			"returnTypes": "num"
		},
		{
			"primaryName": "rc?",
			"args": [],
			"description": "Returns true if a keyboard character is pending",
			"returnTypes": "bool",
			"migrateToCode": "false"
		},
		{
			"primaryName": "readchar",
			"names": ["rc"],
			"args": [],
			"description": "Reads a character from the user",
			"migrateToCode": "\"A "
		},
		{
			"primaryName": "readline",
			"args": [],
			"description": "Reads a line of text from the user",
			"migrateToCode": "\" "
		},
		{
			"primaryName": "recall",
			"args": [],
			"description": "Reads information from the cassette tape or the disk"
		},
		{
			"primaryName": "repeat",
			"to": "repeat"
		},
		{
			"primaryName": "reverse",
			"to": "reverse"
		},
		{
			"primaryName": "right",
			"to": "right"
		},
		{
			"primaryName": "rotate",
			"args": [
				{"name": "valToRotate", "types": "list|string"}
			],
			"description": "Rotates values by 1 iteration.  If a string is specified, the first character is moved to the end.  If a list is specified, the first element is moved to the end."
		},
		{
			"primaryName": "run",
			"args": [
				{"name": "instructionList", "types": "list"}
			],
			"description": "Runs the specified instruction list"
		},
		{
			"primaryName": "sentence",
			"names": ["se"],
			"to": "sentence"
		},
		{
			"primaryName": "setColor",
			"names": ["sc"],
			"to": "setPenColor"
		},
		{
			"primaryName": "setHeading",
			"names": ["sh"],
			"to": "setHeading"
		},
		{
			"primaryName": "setSpeed",
			"names": ["ss"],
			"args": [
				{"name": "newSpeed", "types": "num", "min": -127, "max": 127}
			],
			"description": "Sets the speed of the active sprite",
			"removeInMigration": true
		},
		{
			"primaryName": "setvoice",
			"args": [
				{"name": "newvoice", "types": "int"}
			],
			"description": ""
		},
		{
			"primaryName": "speed",
			"args": [],
			"description": "Returns speed of the active sprite",
			"returnTypes": "num"
		},
		{
			"primaryName": "stop",
			"to": "stop"
		},
		{
			"primaryName": "sum",
			"to": "sum"
		},
		{
			"primaryName": "sx",
			"to": "setX"
		},
		{
			"primaryName": "sxv",
			"args": [
				{"name": "newvelocity", "types": "num"}
			],
			"description": "Sets the x-components of the active sprite's velocity",
			"removeInMigration": true,
			"returnTypes": null
		},
		{
			"primaryName": "sy",
			"to": "setY"
		},
		{
			"primaryName": "syv",
			"args": [
				{"name": "newvelocity", "types": "num"}
			],
			"description": "Sets the y-components of the active sprite's velocity",
			"removeInMigration": true,
			"returnTypes": null
		},
		{
			"primaryName": "tell",
			"args": [
				{"name": "newContext"}
			],
			"description": "Changes what the commands are sent to.  For example, 'tell sprite 5' will send upcoming commands to srite 5 instead of whatever they were sent to before.  What tell does in a Logo program is analogous to you conversing with a few different people and changing who you have eye contact with before speaking again.  In a similar way, you're indicating that your next words are intended for a different recipiant."
		},
		{
			"primaryName": "test",
			"args": [
				{"name": "condition", "types": "bool"}
			],
			"description": "Tests a condition and assigns the result to a flag.  The flag can then be used with commands like ift and iff.",
			"returnTypes": null
		},
		{
			"primaryName": "text",
			"args": [
				{"name": "procedureName", "types": "string"}
			],
			"description": "Returns a string representing the implementation of the specified procedure",
			"returnTypes": "string",
			"migrateToCode": "\" "
		},
		{
			"primaryName": "thaw",
			"args": [],
			"description": "Continues motion of sprites on the screen.  Motion may have been stopped by calling 'freeze'.",
			"removeInMigration": true
		},
		{
			"primaryName": "thing",
			"args": [
				{"name": "variableName", "types": "string"}
			],
			"description": "Returns the value associated with the specified name"
		},
		{
			"primaryName": "thing?",
			"args": [
				{"name": "variableName", "types": "string"}
			],
			"description": "Returns true if there is a value associated with the specified name"
		},
		{
			"primaryName": "traceback",
			"args": [],
			"description": "When called within a procedure, prints the chain of procedure calls from the current procedure back to the top level.  In WebLogo, the Debugging -&gt; Show Debugger will serve a similar purpose.  WebLogo's debugger shows the call stack among other things."
		},
		{
			"primaryName": "type",
			"to": "type"
		},
		{
			"primaryName": "wait",
			"args": [
				{"name": "interval", "types": "int"}
			],
			"description": "Pauses program execution for the specified interval.  The interval is measured in 60th's of a second.  In other words, wait 60 waits for 1 second.",
			"returnTypes": null
		},
		{
			"primaryName": "where",
			"args": [],
			"description": "Returns a list of the active sprite's x, y, and heading.  The most similar WebLogo commands include pos and turtleState.",
			"to": "pos"
		},
		{
			"primaryName": "while",
			"to": "while"
		},
		{
			"primaryName": "who",
			"args": [],
			"description": "Returns the active sprite"
		},
		{
			"primaryName": "word?",
			"to": "word?"
		},
		{
			"primaryName": "xcor",
			"to": "xCor"
		},
		{
			"primaryName": "xvel",
			"args": [],
			"description": "Returns the x-velocity of the active sprite",
			"migrateToCode": "1"
		},
		{
			"primaryName": "ycor",
			"to": "yCor"
		},
		{
			"primaryName": "yournumber",
			"names": ["yn"],
			"args": [],
			"description": "Returns the number of the active sprite",
			"migrateToCode": "0"
		},
		{
			"primaryName": "yvel",
			"args": [],
			"description": "Returns the y-velocity of the active sprite",
			"migrateToCode": "1"
		}
	],
	"operators": [],
	"keywords": [
		{"from": "end", "to": "end"},
		{
			"from": "then",
			"description": "Used in if-then-else statements",
			"toSymbol": "["
		}
	]
}
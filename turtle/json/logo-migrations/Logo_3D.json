{
	"name": "Logo_3D",
	"description": "An iPad app that lets people create 3D wireframe-oriented drawings using its version of Logo",
	"comments": "A company called ByteWorks made a product titled '3D Logo' for the Apple IIGS but I couldn't find much detail about it.  '3D Logo' is listed at https://juiced.gs/wp-content/uploads/opus-toc.pdf and https://www.apple2history.org/history/ah17/#04.",
	"externalLink": "https://github.com/noelevans555/logo3d",
	"alternativeLinks": [
		"https://www.webpage-1.com/Logo_3D!/",
		"https://webpage-1.com/Logo3D/",
		"https://www.facebook.com/groups/391950357895182/permalink/1763950157361855/?mibextid=oMANbw"
	],
	"sanitization": [
		"removeSquareBracketsForNumberArguments"
	],
	"commands": [
		{
			"primaryName": "acos",
			"to": "arcCos"
		},
		{
			"primaryName": "arcdown",
			"names": ["ad"],
			"args": [
				{"name": "angleDegrees"},
				{"name": "radius"}
			],
			"description": "Draw an arc down"
		},
		{
			"primaryName": "arcleft",
			"names": ["al"],
			"to": "arcLeft"
		},
		{
			"primaryName": "arcright",
			"names": ["ar"],
			"to": "arcRight"
		},
		{
			"primaryName": "arcup",
			"names": ["au"],
			"args": [
				{"name": "angleDegrees"},
				{"name": "radius"}
			],
			"description": "Draw an arc up"
		},
		{
			"primaryName": "asin",
			"to": "arcSin"
		},
		{
			"primaryName": "atan",
			"to": "arcTan"
		},
		{
			"primaryName": "center",
			"names": ["centre"],
			"description": "Move the current image to the center of the drawing area for a more balanced image when rotating",
			"removeInMigration": true
		},
		{
			"primaryName": "clear",
			"to": "clearScreen"
		},
		{
			"primaryName": "cos",
			"to": "cos"
		},
		{
			"primaryName": "dn",
			"args": [
				{"name": "angleDegrees"}
			],
			"description": "Rotates down specified number of degrees.  dn x is the same as up -x. (This is an educated guess based on reviewing example programs)",
			"to": "pitchDown"
		},
		{
			"primaryName": "fd",
			"to": "forward"
		},
		{
			"primaryName": "geosphere2",
			"args": [
				{"name": "radius"},
				{"name": "color"}
			],
			"description": "Draws a geodesic sphere of frequency 2.  For example geosphere2 200 magenta"
		},
		{
			"primaryName": "geosphere3",
			"args": [
				{"name": "radius"},
				{"name": "color"}
			],
			"description": "Draws a geodesic sphere of frequency 3.  For example geosphere3 300 [100 50 25]"
		},
		{
			"primaryName": "getcolor",
			"names": ["gc", "getcolour"],
			"description": "Return current colour value",
			"to": "penColor"
		},
		{
			"primaryName": "goto",
			"description": "Return to a previously marked position(and orientation, if omark was used).  For example, goto p1.  The most similar commands in WebLogo would be setTurtleState and jumpTo."
		},
		{
			"primaryName": "import",
			"args": [
				{"name": "moduleName"}
			],
			"description": "Imports code from another module"
		},
		{
			"primaryName": "local",
			"description": "Gives variables a local scope to avoid name clashes.  For example make local varName=4"
		},
		{
			"primaryName": "lt",
			"to": "left"
		},
		{
			"primaryName": "make",
			"to": "make"
		},
		{
			"primaryName": "mark",
			"args": [
				{"name": "name"}
			],
			"description": "Stores location in a variable by the specified name."
		},
		{
			"primaryName": "omark",
			"args": [
				{"name": "name"}
			],
			"description": "This stores location and orientation in the specified variable.  This is related to the goto command."
		},
		{
			"primaryName": "pause",
			"names": ["p"],
			"args": [
				{"name": "delaySeconds"}
			],
			"description": "Pauses execution for specified number of seconds.  For example, pause 0.5",
			"removeInMigration": true
		},
		{
			"primaryName": "pendown",
			"name": ["pd"],
			"to": "penDown"
		},
		{
			"primaryName": "penup",
			"name": ["pu"],
			"to": "penUp"
		},
		{
			"primaryName": "pick",
			"to": "pick"
		},
		{
			"primaryName": "random",
			"to": "random"
		},
		{
			"primaryName": "randomcolor",
			"names": ["rc", "randomcolour"],
			"args": [],
			"description": "Select a random colour",
			"to": "randomColor"
		},
		{
			"primaryName": "repeat",
			"names": ["rpt"],
			"to": "repeat"
		},
		{
			"primaryName": "rl",
			"description": "Roll left specified number of degrees.",
			"to": "rollLeft"
		},
		{
			"primaryName": "rr",
			"description": "Roll right by specified degrees.",
			"to": "rollRight"
		},
		{
			"primaryName": "rt",
			"to": "right"
		},
		{
			"primaryName": "setbgcolor",
			"names": ["sbgc", "setbgcolour"],
			"to": "setScreenColor"
		},
		{
			"primaryName": "setcolor",
			"names": ["sc", "setcolour"],
			"to": "setColors"
		},
		{
			"primaryName": "showlogo",
			"args": [
				{"name": "size"},
				{"name": "color"}
			],
			"description": "Draw an arrow to where the current position.  showTurtle seems like the most similar command in WebLogo but it takes no arguments.",
			"removeInMigration": true
		},
		{
			"primaryName": "sin",
			"to": "sin"
		},
		{
			"primaryName": "sly",
			"args": [
				{"name": "size"}
			],
			"description": "sly is short for showlogo yellow.  sly 100 is the same as showlogo 100 yellow.",
			"removeInMigration": true
		},
		{
			"primaryName": "sp",
			"args": [
				{"name": "distance"}
			],
			"description": "Go forward the specified distance and then snap to the nearest point.  Except for the snap to nearest point aspect, jumpForward should be the most similar WebLogo command",
			"to": "jumpForward"
		},
		{
			"primaryName": "stop",
			"to": "stop"
		},
		{
			"primaryName": "tan",
			"to": "tan"
		},
		{
			"primaryName": "to",
			"to": "to"
		},
		{
			"primaryName": "u",
			"args": [
				{"name": "num"}
			],
			"description": "Not sure what this does but the command takes a number as input."
		},
		{
			"primaryName": "up",
			"args": [
				{"name": "degrees"}
			],
			"description": "Turns up specified number of degrees",
			"to": "pitchUp"
		},
		{
			"primaryName": "welcomelogo3d",
			"args": [],
			"description": "Shows the welcome animation",
			"removeInMigration": true
		}
	],
	"keywords": [
		{"from": "end", "to": "end"}
	],
	"operators": [
		{
			"symbol": "eq",
			"description": "Checks if equal.",
			"to": "="
		},
		{
			"symbol": "gt",
			"description": "Checks if greater than.",
			"to": ">"
		},
		{
			"symbol": "gte",
			"description": "Checks if greater than or equal.",
			"to": ">="
		},
		{
			"symbol": "lt",
			"description": "Checks if less than.  Need to be careful with this because lt is also a command to turn left a specified number of degrees.  Some context is needed to disambiguate the two.",
			"to": "<"
		},
		{
			"symbol": "lte",
			"description": "Checks if less than or equal.",
			"to": "<="
		},
		{
			"symbol": "ne",
			"description": "Checks if not equal.",
			"to": "<>"
		}
	]
}
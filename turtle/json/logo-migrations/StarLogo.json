{
	"name": "Star Logo",
	"description": "A Logo programming environment that focuses on agent simulation",
	"externalLink": "https://en.wikipedia.org/wiki/StarLogo",
	"alternativeLinks": [
		"https://web.mit.edu/mitstep/starlogo/index.html",
		"https://education.mit.edu/project/starlogo-tng/",
		"https://web.mit.edu/mitstep/starlogo/commands.html"
	],
	"commands": [{
		"primaryName": "abs",
		"to": "abs"
	},
	{
		"primaryName": "acos",
		"to": "arcCos"
	},
	{
		"primaryName": "and",
		"to": "and"
	},
	{
		"primaryName": "asin",
		"to": "arcSin"
	},
	{
		"primaryName": "ask-breed",
		"args": [
			{"name": "commands", "type": "instructionlist"}
		],
		"description": "Asks all turtles of breed frogs to run [list of commands]"
	},
	{
		"primaryName": "ask-breed-with",
		"args": [
			{"name": "condition"},
			{"name": "commands", "type": "instructionlist"}
		],
		"description": "Asks all turtles of breed frogs to run [list of commands]"
	},
	{
		"primaryName": "ask-list-of-turtles",
		"description": ""
	},
	{
		"primaryName": "ask-patch-at",
		"description": ""
	},
	{
		"primaryName": "ask-patches",
		"description": ""
	},
	{
		"primaryName": "ask-patches-with",
		"description": ""
	},
	{
		"primaryName": "ask-turtle",
		"description": ""
	},
	{
		"primaryName": "ask-turtles",
		"description": ""
	},
	{
		"primaryName": "atan",
		"to": "arcTan"
	},
	{
		"primaryName": "average-of-breed",
		"description": ""
	},
	{
		"primaryName": "average-of-list",
		"description": ""
	},
	{
		"primaryName": "average-of-patches",
		"description": ""
	},
	{
		"primaryName": "average-of-patches-with",
		"description": ""
	},
	{
		"primaryName": "average-of-turtles",
		"description": ""
	},
	{
		"primaryName": "average-of-turtles-with",
		"description": ""
	},
	{
		"primaryName": "back",
		"names": ["bk"],
		"to": "backward"
	},
	{
		"primaryName": "bitand",
		"to": "bitAnd"
	},
	{
		"primaryName": "bitor",
		"to": "bitOr"
	},
	{
		"primaryName": "bitXor",
		"to": "bitXor"
	},
	{
		"primaryName": "black",
		"args": [],
		"description": "Returns 0, the number for the black colour"
	},
	{
		"primaryName": "blue",
		"args": [],
		"description": "Returns 105, the number for the blue colour"
	},
	{
		"primaryName": "breed",
		"args": [],
		"description": ""
	},
	{
		"primaryName": "brown",
		"args": [],
		"description": "Returns 35, the number for the brown colour"
	},
	{
		"primaryName": "butfirst",
		"names": ["bf"],
		"to": "butFirst"
	},
	{
		"primaryName": "butlast",
		"names": ["bl"],
		"to": "butLast"
	},
	{
		"primaryName": "clear-all",
		"names": ["ca", "clearall"],
		"to": "clearScreen"
	},
	{
		"primaryName": "clear-command-center",
		"description": ""
	},
	{
		"primaryName": "clear-graphics",
		"names": ["cg"],
		"to": "clearScreen"
	},
	{
		"primaryName": "color",
		"args": [],
		"to": "penColor"
	},
	{
		"primaryName": "cos",
		"to": "cos"
	},
	{
		"primaryName": "cyan",
		"args": [],
		"description": "Returns 85, the number for the cyan colour"
	},
	{
		"primaryName": "e",
		"args": [],
		"description": "Reports the value of e (approximately 2.718281828)"
	},
	{
		"primaryName": "empty?",
		"to": "empty?"
	},
	{
		"primaryName": "exp",
		"to": "exp"
	},
	{
		"primaryName": "first",
		"args": [
			{"name": "val", "types": "list|string"}
		],
		"to": "first"
	},
	{
		"primaryName": "forward",
		"names": ["fd"],
		"to": "forward"
	},
	{
		"primaryName": "fput",
		"to": "fput"
	},
	{
		"primaryName": "gray",
		"names": ["grey"],
		"args": [],
		"description": "Returns 5, the number for the gray colour"
	},
	{
		"primaryName": "green",
		"args": [],
		"description": "Returns 55, the number for the green colour"
	},
	{
		"primaryName": "hatch",
		"args": [
			{"name": "commands"}
		],
		"description": "Make an exact copy of a turtle, including turtles-own variables and state variables. The [list of commands] is then run on the cloned turtle."
	},
	{
		"primaryName": "heading",
		"to": "heading"
	},
	{
		"primaryName": "heading-at",
		"description": "Similar to WebLogo's towards except towards requires a single list argument."
	},
	{
		"primaryName": "heading-towards",
		"args": [
			{"name": "angle", "types": "num"},
			{"name": "distance", "types": "num"}
		],
		"description": "Reports the heading of the turtle distance away at an angle of angle from the caller."
	},
	{
		"primaryName": "hide-turtle",
		"names": ["hideturtle", "ht"],
		"to": "hideTurtle"
	},
	{
		"primaryName": "home",
		"to": "home"
	},
	{
		"primaryName": "if",
		"to": "if"
	},
	{
		"primaryName": "ifelse",
		"to": "ifElse"
	},
	{
		"primaryName": "ignore",
		"args": [
			{"name": "expression"}
		],
		"description": "Ignores the return value of the expression immediately following it. More useful than it looks, ignore can be used to execute a procedure for its side effects"
	},
	{
		"primaryName": "int",
		"to": "int"
	},
	{
		"primaryName": "item",
		"to": "item"
	},
	{
		"primaryName": "left",
		"names": ["lt"],
		"to": "left"
	},
	{
		"primaryName": "length",
		"to": "count"
	},
	{
		"primaryName": "lime",
		"args": [],
		"description": "Returns 65, the number for the lime colour"
	},
	{
		"primaryName": "list",
		"to": "list"
	},
	{
		"primaryName": "list?",
		"to": "list?"
	},
	{
		"primaryName": "ln",
		"to": "ln"
	},
	{
		"primaryName": "log",
		"to": "log10"
	},
	{
		"primaryName": "lput",
		"to": "lput"
	},
	{
		"primaryName": "magenta",
		"args": [],
		"description": "Returns 125, the number for the magenta colour"
	},
	{
		"primaryName": "max",
		"names": ["maximum"],
		"args": [
			{"name": "num1", "types": "num"},
			{"name": "num2", "types": "num"}
		],
		"to": "max"
	},
	{
		"primaryName": "maxnum",
		"args": [],
		"description": "Returns the largest number possible without going into positive infinity."
	},
	{
		"primaryName": "member?",
		"to": "member?"
	},
	{
		"primaryName": "min",
		"names": ["minimum"],
		"args": [
			{"name": "num1", "types": "num"},
			{"name": "num2", "types": "num"}
		],
		"to": "min"
	},
	{
		"primaryName": "minnum",
		"args": [],
		"description": "Returns the lowest number possible without going into negative infinity."
	},
	{
		"primaryName": "not",
		"to": "not"
	},
	{
		"primaryName": "number?",
		"to": "number?"
	},
	{
		"primaryName": "orange",
		"args": [],
		"description": "Returns 25, the number for the orange colour"
	},
	{
		"primaryName": "output",
		"to": "output"
	},
	{
		"primaryName": "output-name",
		"description": "Returns the current filename of the output window. Returns false if no filename has been set yet"
	},
	{
		"primaryName": "pendown",
		"names": ["pd"],
		"to": "penDown"
	},
	{
		"primaryName": "pendown?",
		"to": "penDown?"
	},
	{
		"primaryName": "pendown?-of",
		"args": [
			{"name": "num", "types": "num"}
		],
		"description": "Reports whether the pen of the turtle with who number number is down."
	},
	{
		"primaryName": "penup",
		"names": ["pu"],
		"to": "penUp"
	},
	{
		"primaryName": "pi",
		"to": "pi"
	},
	{
		"primaryName": "pick",
		"to": "pick"
	},
	{
		"primaryName": "pink",
		"args": [],
		"description": "Returns 135, the number for the pink colour"
	},
	{
		"primaryName": "print",
		"to": "print"
	},
	{
		"primaryName": "project-name",
		"args": [],
		"description": "returns the current filename of the project. Returns false if no filename has been set yet"
	},
	{
		"primaryName": "purple",
		"names": ["violet"],
		"args": [],
		"description": "Returns 115, the number for the purple/violet colour"
	},
	{
		"primaryName": "random",
		"to": "random"
	},
	{
		"primaryName": "red",
		"args": [],
		"description": "Returns 15, the number for the red colour"
	},
	{
		"primaryName": "repeat",
		"to": "repeat"
	},
	{
		"primaryName": "reverse",
		"to": "reverse"
	},
	{
		"primaryName": "right",
		"names": ["rt"],
		"to": "right"
	},
	{
		"primaryName": "round",
		"to": "round"
	},
	{
		"primaryName": "screen-height",
		"args": [],
		"description": "returns height of the screen",
		"returnTypes": "num"
	},
	{
		"primaryName": "screen-width",
		"args": [],
		"description": "returns width of the screen",
		"returnTypes": "num"
	},
	{
		"primaryName": "sentence",
		"names": ["se"],
		"to": "sentence"
	},
	{
		"primaryName": "setbg",
		"description": "Sets the color of all the patches to color.",
		"to": "setFillColor"
	},
	{
		"primaryName": "setheading",
		"names": ["seth"],
		"to": "setHeading"
	},
	{
		"primaryName": "setitem",
		"args": [
			{"name": "index", "types": "int"},
			{"name": "list", "types": "list"}
		],
		"to": "setItem"
	},
	{
		"primaryName": "setpendown?-at",
		"args": [
			{"name": "x", "types": "num"},
			{"name": "y", "types": "num"},
			{"name": "b", "types": "bool"}
		],
		"description": "Sets the pendown state of the turtle xcor units in the x direction and $ycor units in the y direction away from the caller to"
	},
	{
		"primaryName": "shown?",
		"to": "shown?"
	},
	{
		"primaryName": "showturtle",
		"names": ["show-turtle", "st"],
		"to": "showTurtle"
	},
	{
		"primaryName": "sin",
		"to": "sin"
	},
	{
		"primaryName": "sky",
		"args": [],
		"description": "Returns 95, the number for the sky blue colour"
	},
	{
		"primaryName": "sqrt",
		"to": "sqrt"
	},
	{
		"primaryName": "stop",
		"args": [],
		"description": "Exits the current procedure immediately.",
		"to": "stop"
	},
	{
		"primaryName": "tan",
		"to": "tan"
	},
	{
		"primaryName": "to",
		"to": "to"
	},
	{
		"primaryName": "towards",
		"args": [
			{"name": "x", "types": "num"},
			{"name": "y", "types": "num"}
		],
		"description": "Similar to 'towards' in WebLogo but towards takes a single list of coordinates."
	},
	{
		"primaryName": "turquoise",
		"args": [],
		"description": "Returns 75, the number for the turquoise colour"
	},
	{
		"primaryName": "variable",
		"description": "Returns the value of the variable specified"
	},
	{
		"primaryName": "white",
		"args": [],
		"description": "Returns 9, the number for the white colour"
	},
	{
		"primaryName": "word?",
		"to": "word?"
	},
	{
		"primaryName": "xcor",
		"to": "xCor"
	},
	{
		"primaryName": "ycor",
		"to": "yCor"
	},
	{
		"primaryName": "yellow",
		"args": [],
		"description": "Returns 45, the number for the yellow colour"
	}
	],
	"operators": [
		{
			"symbol": "and",
			"convertToCommand": "and"
		},
		{
			"symbol": "mod",
			"convertToCommand": "modulo"
		},
		{
			"symbol": "or",
			"convertToCommand": "or"
		},
		{
			"symbol": "xor",
			"convertToCommand": "xor"
		}
	],
	"keywords": [{
		"from": "end",
		"to": "end"
	}]
}
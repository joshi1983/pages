[
	{
		"names": ["back", "backward", "bk"],
		"translateToCommand": "backward",
		"class": "turtle",
		"argCount": 1
	},
	{
		"names": ["begin_fill"],
		"translateToCommand": "polyStart",
		"class": "turtle",
		"argCount": 0
	},
	{
		"names": ["begin_poly"],
		"translateToCommand": null,
		"class": "turtle",
		"argCount": 0
	},
	{
		"names": ["bgcolor"],
		"translateToCommands": ["screenColor", "setScreenColor"],
		"class": "screen",
		"treatThreeArgsAsSingleColor": true,
		"anyParameterDependsOnColorMode": true,
		"argCount": {
			"min": 0,
			"max": 3
		}
	},
	{
		"names": ["bye"],
		"translateToCommand": null,
		"class": "screen",
		"argCount": 0,
		"message": "If you want to close the browser window, you'll need to do that manually.  WebLogo code does not have the power to do that."
	},
	{
		"names": ["choice"],
		"translateToCommand": "pick",
		"argCount": 1,
		"class": "random"
	},
	{
		"names": ["circle"],
		"translateToCommands": ["arcRight", "circleRight"],
		"argCount": {
			"min": 1,
			"max": 3
		},
		"class": "turtle"
	},
	{
		"names": ["clear"],
		"translateToCommand": "clearScreen",
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["clearstamp"],
		"translateToCommand": null,
		"argCount": 1,
		"class": "turtle"
	},
	{
		"names": ["clearstamps"],
		"translateToCommand": null,
		"argCount": 1,
		"class": "turtle"
	},
	{
		"names": ["clone"],
		"translateToCommand": "turtleState",
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["color"],
		"translateToCommands": [
			"penColor", "setColors"],
		"treatThreeArgsAsSingleColor": true,
		"anyParameterDependsOnColorMode": true,
		"argCount": {
			"min": 0,
			"max": 3
		},
		"class": "turtle"
	},
	{
		"names": ["degrees"],
		"translateToCommand": "pyDegrees",
		"isTranslatedToProcedure": true,
		"argCount": {
			"min": 0,
			"max": 1
		},
		"class": "turtle"
	},
	{
		"names": ["delay"],
		"translateToCommand": null,
		"argCount": {
			"min": 0,
			"max": 1
		},
		"message": "delay in Python's turtle package pauses execution for a time interval.  If you want to make an animation, use the animation.time command and animation procedures.  See the tutorial topic on animation to learn more.",
		"class": "screen"
	},
	{
		"names": ["distance"],
		"translateToCommand": "distance",
		"groupTwoArgsAsList": true,
		"argCount": {
			"min": 1,
			"max": 2
		},
		"class": "turtle"
	},
	{
		"names": ["done", "mainloop"],
		"translateToCommand": null,
		"argCount": 0,
		"class": "screen"
	},
	{
		"names": ["dot"],
		"translateToCommand": "circle",
		"argCount": {
			"min": 0,
			"max": 2
		},
		"class": "turtle"
	},
	{
		"names": ["end_fill"],
		"translateToCommand": "polyEnd",
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["end_poly"],
		"translateToCommand": "closePath",
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["exitonclick"],
		"translateToCommand": null,
		"argCount": 0,
		"class": "screen"
	},
	{
		"names": ["fd", "forward", "go"],
		"translateToCommand": "forward",
		"argCount": 1,
		"class": "turtle"
	},
	{
		"names": ["fillcolor"],
		"translateToCommands": ["fillColor", "setFillColor"],
		"treatThreeArgsAsSingleColor": true,
		"anyParameterDependsOnColorMode": true,
		"argCount": {
			"min": 0,
			"max": 3
		},
		"class": "turtle"
	},
	{
		"names": ["getscreen"],
		"translateToCommand": null,
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["heading"],
		"translateToCommand": "pyHeading",
		"isTranslatedToProcedure": true,
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["hideturtle", "ht"],
		"translateToCommand": "hideTurtle",
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["home"],
		"translateToCommand": "home",
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["isdown"],
		"translateToCommand": "penDownp",
		"argCount": 1,
		"class": "turtle"
	},
	{
		"names": ["isvisible"],
		"translateToCommand": "turtleVisiblep",
		"argCount": 1,
		"class": "turtle"
	},
	{
		"names": ["left", "lt"],
		"translateToCommand": "left",
		"argCount": 1,
		"args": [
			{
				"wrapWithCommands": ["pyScaleAngleToDegrees"],
				"ignoreIfFalse": "mightDegreeScaleBeChanged"
			}
		],
		"class": "turtle"
	},
	{
		"names": ["listen"],
		"translateToCommand": null,
		"argCount": 0,
		"class": "screen"
	},
	{
		"names": ["onclick"],
		"translateToCommand": null,
		"argCount": {
			"min": 1,
			"max": 3
		},
		"class": "turtle"
	},
	{
		"names": ["ondrag"],
		"translateToCommand": null,
		"argCount": {
			"min": 1,
			"max": 3
		},
		"class": "turtle"
	},
	{
		"names": ["onkey"],
		"translateToCommand": null,
		"argCount": 2,
		"class": "screen"
	},
	{
		"names": ["onkeypress"],
		"translateToCommand": null,
		"argCount": {
			"min": 1,
			"max": 2
		},
		"class": "screen"
	},
	{
		"names": ["onkeyrelease"],
		"translateToCommand": null,
		"argCount": 2,
		"class": "screen"
	},
	{
		"names": ["onrelease"],
		"translateToCommand": null,
		"argCount": {
			"min": 1,
			"max": 3
		},
		"class": "turtle"
	},
	{
		"names": ["ontimer"],
		"translateToCommand": null,
		"argCount": {
			"min": 1,
			"max": 2
		},
		"message": "ontimer in Python's turtle package is often used for animation.  In WebLogo, animations are implemented differently.  See the tutorial topic on animation to learn more.",
		"class": "screen"
	},
	{
		"names": ["Pen"],
		"translateToCommand": null,
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["pencolor"],
		"translateToCommands": ["penColor", "setPenColor"],
		"treatThreeArgsAsSingleColor": true,
		"anyParameterDependsOnColorMode": true,
		"argCount": {
			"min": 0,
			"max": 3
		},
		"class": "turtle"
	},
	{
		"names": ["pendown", "pd", "down"],
		"translateToCommand": "penDown",
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["pensize", "width"],
		"translateToCommands": ["penSize", "setPenSize"],
		"argCount": {
			"min": 0,
			"max": 1
		},
		"class": "turtle"
	},
	{
		"names": ["penup", "pu", "up"],
		"translateToCommand": "penUp",
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["pos", "position"],
		"translateToCommand": "pos",
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["print"],
		"translateToCommand": "print",
		"argCount": 1,
		"class": "turtle"
	},
	{
		"names": ["radians"],
		"translateToCommand": "pyDegrees",
		"isTranslatedToProcedure": true,
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["random"],
		"translateToCommand": "randomRatio",
		"argCount": 0,
		"class": "random"
	},
	{
		"names": ["right", "rt"],
		"translateToCommand": "right",
		"argCount": 1,
		"args": [
			{
				"wrapWithCommands": ["pyScaleAngleToDegrees"],
				"ignoreIfFalse": "mightDegreeScaleBeChanged"
			}
		],
		"class": "turtle"
	},
	{
		"names": ["Screen"],
		"translateToCommand": null,
		"argCount": {
			"min": 0,
			"max": 2
		},
		"class": "turtle"
	},
	{
		"names": ["screensize"],
		"translateToCommand": null,
		"argCount": {
			"min": 0,
			"max": 3
		},
		"message": "screensize sets or reads the screen size but this is not useful in WebLogo.  In WebLogo, you are writing code to make a drawing.  A WebLogo drawing essentially has an unlimited resolution until you export it.",
		"class": "screen"
	},
	{
		"names": ["goto", "setpos", "setposition"],
		"translateToCommand": "setPos",
		"groupTwoArgsAsList": true,
		"argCount": {
			"min": 1,
			"max": 2
		},
		"class": "turtle"
	},
	{
		"names": ["setup"],
		"translateToCommand": null,
		"argCount": {
			"min": 1,
			"max": 4
		},
		"class": "turtle"
	},
	{
		"names": ["setx"],
		"translateToCommand": "setX",
		"argCount": 1,
		"class": "turtle"
	},
	{
		"names": ["sety"],
		"translateToCommand": "setY",
		"argCount": 1,
		"class": "turtle"
	},
	{
		"names": ["shape"],
		"translateToCommand": null,
		"argCount": 1,
		"class": "turtle"
	},
	{
		"names": ["shapesize"],
		"translateToCommand": null,
		"argCount": 3,
		"class": "turtle"
	},
	{
		"names": ["showturtle", "st"],
		"translateToCommand": "showTurtle",
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["sleep"],
		"translateToCommand": null,
		"argCount": 0,
		"class": "time"
	},
	{
		"names": ["speed"],
		"translateToCommand": null,
		"argCount": {
			"min": 0,
			"max": 1
		},
		"class": "turtle"
	},
	{
		"names": ["stamp"],
		"translateToCommand": null,
		"argCount": 1,
		"class": "turtle"
	},
	{
		"names": ["title"],
		"translateToCommand": null,
		"argCount": 1,
		"class": "screen"
	},
	{
		"names": ["towards"],
		"translateToCommand": "towards",
		"groupTwoArgsAsList": true,
		"argCount": {
			"min": 1,
			"max": 2
		},
		"class": "turtle"
	},
	{
		"names": ["tracer"],
		"translateToCommand": null,
		"argCount": {
			"min": 0,
			"max": 2
		},
		"message": "tracer in Python's turtle package is mainly used for animation.  If you want to make an animation, use the animation.time command and animation procedures.  See the tutorial topic on animation to learn more.",
		"class": "screen"
	},
	{
		"names": ["Turtle"],
		"translateToCommand": null,
		"argCount": {
			"min": 0,
			"max": 2
		},
		"class": "screen"
	},
	{
		"names": ["write"],
		"translateToCommand": "label",
		"argCount": {
			"min": 1,
			"max": 4
		},
		"class": "turtle"
	},
	{
		"names": ["xcor"],
		"translateToCommand": "xCor",
		"argCount": 0,
		"class": "turtle"
	},
	{
		"names": ["ycor"],
		"translateToCommand": "yCor",
		"argCount": 0,
		"class": "turtle"
	}
]
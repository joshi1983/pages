[
{
	"name": "bye",
	"reason": "Instead of using the bye command, close your web browser.  WebLogo can not do that for you because JavaScript can't control that aspect of your web browser."
},
{
	"name": "clearText",
	"reason": "Instead of using the clearText command, click the clear text button.  It is on the far right from the 'Commander' title.  We want the user interface to have exclusive control over clearing those messages instead of letting the code clear its own messages."
},
{
	"name": "ct",
	"reason": "Instead of using the ct command, click the clear text button.  It is on the far right from the 'Commander' title.  We want the user interface to have exclusive control over clearing those messages instead of letting the code clear its own messages."
},
{
	"name": "define",
	"reason": "Instead of using define to define a procedure, use the <span class=\"command\">to command</span>."
},
{
	"name": "edall",
	"reason": "Instead of using the edall command, click the Edall button or File -&gt; Edit menu item.  Some Logo interpreters let the edall command open a code editor but WebLogo doesn't treat it as a command because the same can be achieved other ways in the user-interface.  To ease transition for those familiar with other Logo interpreters, the code editor can be opened by running 'edall' in the Commander but edall is not supported in any Logo scripts."
},
{
	"name": "fill",
	"reason": "Instead of using the fill command, use filled shapes such as <span class=\"command\">circle</span> and commands like <span class=\"command\">setfillcolor</span>."
},
{
	"name": "go",
	"reason": "Instead of using the go command, use something else.  <p>If you want to set the coordinates of the turtle, use commands like <span class=\"command\">setpos</span></p>"
},
{
	"name": "goto",
	"reason": "Instead of using the goto command, use something else.  <p>If you want to jump to other sections within a procedure like the goto command from FMS Logo, use commands like <span class=\"command\">if</span>, <span class=\"command\">ifelse</span> or a loop such as <span class=\"command\">repeat</span>, <span class=\"for\">for</span>, <span class=\"command\">while</span>.  Most modern programming languages don't support anything like goto because it makes the flow of execution difficult to follow.</p><p>If you want to set the coordinates of the turtle, use commands like <span class=\"command\">setpos</span></p>"
},
{
	"name": "halt",
	"reason": "Instead of using the halt command, click the Pause button.  Some Logo interpreters support a halt command which does nothing outside of a commander input.  WebLogo does not support the halt command because the same behaviour can be triggered through the user-interface without supporting the command."
},
{
	"name": "local",
	"reason": "Instead of using the local command, choose an initial value and call <span class=\"command\">localmake</span>.  Some Logo interpreters support a local command which declares local variables without indicating an initial value.  Letting variables exist without an associated value is different from how variables work in most other programming languages, though.  Values like null and undefined are supported by other languages but they have big drawbacks and lead to less maintainable code.  If you just want other programmers to understand that a variable of a certain name is local, you could write a comment instead and use <span class=\"command\">localmake</span> instead of <span class=\"command\">make</span> to assign values to it."
},
{
	"name": "setfloodcolor",
	"reason": "Instead of using a setfloodcolor command, use commands like setfillcolor and calls to 2D shape commands like circle will fill the area inside them.  WebLogo doesn't support flood fills."
},
{
	"name": "slowdown",
	"reason": "Instead of using a slowdown command, set execution speed through the Set menu.  slowdown is a command in FMSLogo but we are not supporting it because we want the graphical user-interface to have complete control execution speed.  Letting code potentially slow itself down complicates the feature needlessly."
},
{
	"name": "slowdraw",
	"reason": "Instead of using a slowdraw command, set execution speed through the Set menu.  slowdraw is a command in FMSLogo but we are not supporting it because we want the graphical user-interface to have complete control execution speed.  Letting code potentially slow itself down complicates the feature needlessly."
},
{
	"name": "zoom",
	"reason": "Instead of using a zoom command, use the Zoom menu or hover over the graphics screen and rotate your mouse wheel.  FMSLogo supports a zoom command but we want the user-interface to have exlusive control over zoom.  If you want code to make a drawing a different size, you can do that without changing zoom."
}
]